@import '../../../styles/colours';
@import '../../../styles/icons-variables';

@mixin inputIcon {
  background-repeat: no-repeat;
  background-position: center;
  background-size: contain;
  position: absolute;
  cursor: pointer;
  user-select: none;
  width: 24px;
  height: 24px;
  right: 16px;
  top: 16px;
}

.formInput {
  position: relative;
  font-size: 18px;
  line-height: 24px;
  color: $color-neutral-600;
  user-select: none;

  input {
    font-size: 18px;
    outline: none;
    position: relative;
    height: 60px;
    border: 1px solid $color-neutral-300;
    border-radius: 9pt;
    box-sizing: border-box;
    margin-top: 0;
    padding: var(--spacing-md) var(--spacing-2xl) var(--spacing-xs)
      var(--spacing-md);
    width: 100%;
    max-width: none !important;

    &:hover,
    &:focus {
      border-color: $color-blue-500;
    }

    &:active {
      border-color: $color-blue-500;
      box-shadow: 0px 0px 0px 4px $color-button-shadow;
    }

    &::placeholder {
      color: transparent;
    }

    &::-webkit-contacts-auto-fill-button {
      visibility: hidden;
      pointer-events: none;
      position: absolute;
    }

    &:disabled {
      background-color: $color-neutral-50 !important;
    }

    &:focus {
      &::placeholder {
        color: $color-neutral-500 !important;
      }
    }
  }

  &:has(select option:checked:not([value=''])) {
    label {
      display: none;
    }
  }

  label {
    position: absolute;
    top: 16px;
    left: 18px;
    pointer-events: none;
    transform-origin: left center;
    transition: transform 250ms;
    z-index: 1;
  }

  &:has(input:focus) label,
  &:has(input:not(:placeholder-shown)) label,
  &:has(textarea:focus) label,
  &:has(textarea:not(:placeholder-shown)) label {
    transform: translateY(-100%) scale(0.75);
    top: 25px;
  }

  &:has(.errorMessage),
  &.hasError {
    input {
      border-color: $color-red-600;
    }

    label {
      color: $color-red-600;
    }
  }

  &.showPassword {
    .togglePassword {
      display: block;
      @include inputIcon();
    }

    &:has(input[type='password']) {
      .togglePassword {
        background-image: url($icon-eye-off);
      }
    }

    &:has(input[type='text']) {
      .togglePassword {
        background-image: url($icon-eye);
      }
    }
  }

  .showSuccessIcon {
    @include inputIcon();
    display: none;
  }

  &.isValid {
    input {
      border-color: $color-green-800;
    }

    .showSuccessIcon {
      display: block;
      background-image: url($icon-highlight-on);
    }
  }
}

input::-ms-reveal,
input::-ms-clear {
  display: none;
}
